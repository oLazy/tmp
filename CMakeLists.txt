cmake_minimum_required(VERSION 3.10)
project(mt1danisModelParams)
find_package(Boost REQUIRED serialization iostreams system filesystem timer)
find_package(OpenMP)
if (OpenMP_CXX_FOUND)
	#add_compile_definitions(_OMP=1)
	add_definitions(-D_OMP=1)
endif()
if (Boost_FOUND)
    message("BOOST FOUND")
    message("VERSION: ${Boost_VERSION}")
endif()
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O0 -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer")
#set(GCC_COVERAGE_COMPILE_FLAGS "-O3")

add_executable(mt1danisModelParams main.cpp objects.h MTTensor.cpp)
add_executable(MTmgen mt1danis_generate_model.cpp objects.h MTTensor.cpp)
add_executable(doTest some_tests.cpp objects.h MTTensor.cpp)
add_executable(MTrgen generate_replica.cpp objects.h MTTensor.cpp)
add_executable(MTSampler sampler.cpp objects.h MTTensor.cpp)
target_link_libraries(mt1danisModelParams ${Boost_LIBRARIES})
target_link_libraries(MTmgen STATIC ${Boost_LIBRARIES})
target_link_libraries(MTrgen ${Boost_LIBRARIES})
if (OpenMP_CXX_FOUND)
    message("FOUND OMP")
    target_link_libraries(MTSampler ${Boost_LIBRARIES} OpenMP::OpenMP_CXX)
    else()
    target_link_libraries(MTSampler ${Boost_LIBRARIES})
endif ()
#target_link_libraries(MTSampler ${Boost_LIBRARIES})
target_link_libraries(doTest ${Boost_LIBRARIES})
